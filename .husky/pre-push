#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}🚀 Running pre-push checks...${NC}"

# Get the current branch name
BRANCH=$(git rev-parse --abbrev-ref HEAD)
echo "${BLUE}📌 Current branch: $BRANCH${NC}"

# Check if pushing to main/master branch
if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
  echo "${YELLOW}⚠️  You are pushing to the $BRANCH branch. Extra checks will be performed.${NC}"
  STRICT_MODE=true
else
  STRICT_MODE=false
fi

# 1. Check TypeScript types
echo "${BLUE}📝 Checking TypeScript types...${NC}"
if ! npm run type-check; then
  echo "${RED}❌ TypeScript type check failed!${NC}"
  exit 1
fi

# 2. Run all linting checks
echo "${BLUE}🔍 Running ESLint checks...${NC}"
if ! npm run lint:check; then
  echo "${RED}❌ ESLint checks failed!${NC}"
  exit 1
fi

# 3. Check code formatting
echo "${BLUE}🎨 Checking code formatting...${NC}"
if ! npm run format:check; then
  echo "${RED}❌ Code formatting check failed! Run 'npm run format' to fix.${NC}"
  exit 1
fi

# 4. Build check (only for main/master or if BUILD_CHECK env var is set)
if [ "$STRICT_MODE" = true ] || [ "$BUILD_CHECK" = "true" ]; then
  echo "${BLUE}🏗️  Running build check...${NC}"
  if ! npm run build; then
    echo "${RED}❌ Build failed!${NC}"
    exit 1
  fi
  # Clean up build artifacts after check
  rm -rf dist 2>/dev/null || true
fi

# 5. Check for large files (>1MB)
echo "${BLUE}📦 Checking for large files...${NC}"
LARGE_FILES=$(find . -type f -size +1M -not -path "./node_modules/*" -not -path "./.git/*" -not -path "./dist/*" 2>/dev/null || true)
if [ -n "$LARGE_FILES" ]; then
  echo "${YELLOW}⚠️  Warning: Found large files (>1MB):${NC}"
  echo "$LARGE_FILES"
  if [ "$STRICT_MODE" = true ]; then
    echo "${RED}❌ Large files detected in strict mode. Please review before pushing to $BRANCH.${NC}"
    exit 1
  fi
fi

# 6. Check for sensitive information patterns
echo "${BLUE}🔒 Checking for potential sensitive information...${NC}"
SENSITIVE_PATTERNS="(password|secret|key|token|api_key|private_key)[\s]*[:=][\s]*['\"][^'\"]{8,}['\"]"
if git diff HEAD~1..HEAD | grep -iE "$SENSITIVE_PATTERNS" >/dev/null 2>&1; then
  echo "${RED}❌ Potential sensitive information detected in commits!${NC}"
  echo "${YELLOW}Please review your changes and remove any sensitive data.${NC}"
  exit 1
fi

# 7. Branch protection check
if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
  echo "${YELLOW}💡 Reminder: You're pushing to $BRANCH. Make sure your changes have been reviewed.${NC}"
fi

echo "${GREEN}✅ All pre-push checks passed! 🎉${NC}"
echo "🔧 Running ESLint checks..."
npm run lint:check

# Check formatting
echo "💅 Checking code formatting..."
npm run format:check

# Try to build the project
echo "🏗️  Building project..."
npm run build

echo "✅ All pre-push checks passed!"
